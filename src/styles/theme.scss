@use "./constants" as constants;
@import url(_fonts.scss);

:root {
  font-family: Roboto;
  --colorLight: #fff;
  --colorLightGrey: #8c9597;
  --colorDark: #1d2130;
  --colorDarker: #0b0706;
  --colorPrimary: #32b4ec;
  --colorSectionDark: #1f3136;
  --sectionGap: 8rem;
  color: var(--colorDark);
  @media (max-width: 1000px) {
    --sectionGap: 4rem;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
.mainGrid {
  --padding-inline: #{constants.$paddingInline};
  --content-max-width: calc(1400rem / 16);
  --breakout-max-width: calc(1500rem / 16);
  --breakout-min-width: 0rem;
  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );
  --content-size: min(
    100% - var(--padding-inline) * 2,
    var(--content-max-width)
  );
  --fullWidth-size: minmax(var(--padding-inline), 1fr);
  grid-template-columns:
    [fullWidth-start] var(--fullWidth-size) [breakout-start] minmax(
      var(--breakout-min-width),
      var(--breakout-size)
    )
    [content-start] calc(var(--content-size)) [content-end] minmax(
      var(--breakout-min-width),
      var(--breakout-size)
    )
    [breakout-end] var(--fullWidth-size)
    [fullWidth-end];
  display: grid;
}
.breakout {
  grid-column: breakout;
}
.content {
  grid-column: content;
}
.fullWidth {
  grid-column: fullWidth;
}
body {
  min-width: 320px;
  min-height: 100vh;
}
.header .nav {
  display: flex;
  gap: 2rem;
  .logoLink {
    margin-inline-end: auto;
  }
}
main > section {
  margin-block: var(--sectionGap);
}
main > section:first-of-type {
  margin-block-start: 0;
}
// main > section:last-of-type {
//   margin-block-end: 0;
// }

a:any-link {
  text-underline-offset: 2px;
  color: inherit;
  align-content: center;
  color: var(--colorDarker);
  &:not(:hover) {
    text-decoration: none;
    color: #525560;
  }
  &[data-status="active"] {
    font-weight: 600;
    color: var(--colorDarker);
  }
}

.header {
  padding-block: 1rem;
  box-shadow: 0px -1.9rem 1rem 2rem #c0c0c0;
  margin-block-end: 1rem;
  position: fixed;
  z-index: 200;
  top: 0;
  width: 100%;
  background-color: white;
}
main {
  padding-block-start: var(--headerHeight);
}
.btn {
  padding: 0.75rem 1.5rem;
  cursor: pointer;
}
.btnDark {
  @extend .btn;
  background-color: var(--colorDark);
  border-radius: 0.25rem;
  color: white;
  border: none;
  &:is(a:any-link) {
    color: white;
    text-decoration: none;
    &:not(:hover) {
      color: white;
    }
  }
}
.btnLight {
  @extend .btn;
  background-color: white;
  border-radius: 0.25rem;
  color: var(--colorDark);
  border: none;
  &:is(a:any-link) {
    color: var(--colorDark);
    text-decoration: none;
    &:not(:hover) {
      color: var(--colorDark);
    }
  }
}
.btnPrimary {
  @extend .btn;
  background-color: var(--colorPrimary);
  border-radius: 0.25rem;
  border: none;
  color: white;
  &:is(a:any-link) {
    color: white;
    text-decoration: none;
    &:not(:hover) {
      color: white;
    }
  }
}
.btnTransparent {
  @extend .btn;
  background-color: transparent;
  border-radius: 0.25rem;
  max-width: max-content;
  border: 1px soliod #32b4ec;
  color: var(--colorDark);
  &:is(a:any-link) {
    color: var(--colorDark);
    text-decoration: none;
    &:not(:hover) {
      color: var(--colorDark);
    }
  }
}

.headerHelper {
  position: fixed;
  top: -200vh;
  width: 100vw;
  visibility: hidden;
}

.mobileHeader {
  .content {
    display: flex;
    justify-content: space-between;
    .sidebar {
      position: fixed;
      top: 0;
      right: 0;
      inset: 0;
      z-index: 200;
      transform: translateX(200%);
      transition: transform 300ms;
      &[data-open="true"] {
        transform: translateX(0%);
      }
      nav {
        display: grid;
        padding: 2rem;
        padding-block-start: 4rem;
        background-color: #fff;
        height: 100%;
        grid-auto-rows: max-content;
        text-align: center;
      }
    }
  }
}
.hamburger {
  --_burgerWidth: 1.45rem;
  height: 2px;
  width: var(--_burgerWidth);
  background-color: var(--colorDarker);
  margin-block: auto;
  position: relative;
  z-index: 201;
  transition: background-color 300ms;
  &::after,
  &::before {
    content: "";
    background-color: var(--colorDarker);
    position: absolute;
    height: 2px;
    width: var(--_burgerWidth);
    transform-origin: center;
    transition: transform 300ms;
  }
  &::after {
    top: -0.5rem;
  }
  &::before {
    bottom: -0.5rem;
  }
  &[data-open="true"] {
    background-color: transparent;
    &::after {
      transform: rotate(-45deg) translate(-0.35rem, 0.35rem);
    }
    &::before {
      transform: rotate(45deg) translate(-0.35rem, -0.35rem);
    }
  }
}

footer {
  font-size: calc(14rem / 16);
  background-color: var(--colorSectionDark);
  color: white;
  padding-block: 2rem;
  &.TanStackRouterDevtools {
    padding: 0;
  }
  .footerGrid {
    display: flex;
    flex-wrap: wrap;
    row-gap: 1rem;
    column-gap: 2rem;
    .grid-item:is(:first-child, :last-child) {
      flex-grow: 1;
      @media (max-width: 600px) {
        width: 100%;
      }
    }
    .grid-item:not(:first-child, :last-child) {
      flex-grow: 1;
    }
    .grid-item {
      h2 {
        font-size: 1rem;
        &:has(+ .newsLetter) {
          font-size: clamp(calc(24rem / 16), 5vw, calc(40rem / 16));
          max-width: 24ch;
        }
      }
    }
    ul {
      list-style: none;
      li {
        margin-block: 1rem;
      }
    }
  }
  svg {
    filter: brightness(0) invert(1);
  }
  a:any-link {
    color: #fff;
    &:not(:hover) {
      color: #c9c9c8;
    }
    &[data-status="active"] {
      color: #fff;
      font-weight: 400;
    }
  }
}

#root {
  display: flex;
  flex-direction: column;
  min-height: 100lvh;
  main {
    flex-grow: 1;
  }
}

.newsLetter {
  --_borderRad: 0.25rem;
  display: block;
  font-size: calc(14rem / 16);
  line-height: 1;
  width: max-content;
  margin-block-start: 1rem;
  position: relative;
  &:focus-within {
    outline: -webkit-focus-ring-color auto 1px;
  }
  input {
    border: 1px solid white;
    border-right: none;
    border-top-left-radius: var(--_borderRad);
    border-bottom-left-radius: var(--_borderRad);
    padding: 0.5rem 1rem;
    outline: none;
    background-color: transparent;
    color: white;
    transition: border-color 300ms;
    position: relative;
    &::placeholder {
      color: #c9c9c8;
    }
    &:user-invalid:not(:placeholder-shown) {
      border-color: red;
    }
    &:user-valid:not(:placeholder-shown) {
      border-color: green;
    }
  }
  &:has(input:user-invalid) {
    &::after {
      content: attr(data-invalid-txt);
      color: red;
      position: absolute;
      top: calc(100% + 0.5rem);
      left: 0%;
      font-size: calc(12rem / 16);
    }
  }
  button {
    border: 1px solid white;
    border-top-right-radius: var(--_borderRad);
    border-bottom-right-radius: var(--_borderRad);
    padding: 0.5rem 1rem;
    font-weight: 500;
  }
}

.txtWrapper:has(> small.dashTitle) {
  --_padding-inline-start: 4rem;
  > * {
    margin-block: 2.25rem;
    @media (min-width: 1000px) {
      padding-inline-start: var(--_padding-inline-start);
    }
  }

  .dashTitle {
    padding-inline-start: var(--_padding-inline-start);
    position: relative;
    color: var(--colorDark);
    font-weight: 600;
    text-transform: uppercase;
    &::before {
      content: "";
      height: 2px;
      position: absolute;
      left: 0;
      width: calc(var(--_padding-inline-start) - 1rem);
      inset-block: 0;
      margin-block: auto;
      background-color: #0b0706;
    }
  }

  .sectionTitle {
    color: var(--colorDark);
  }

  .sectionTitle ~ p {
    color: #525560;
    margin-block: 1.5rem;
  }
}
.imgWrapperAbsolute {
  // height: 100%;
  // width: 100%;
  position: relative;
  video,
  img {
    object-fit: cover;
    width: 100%;
    height: 100%;
    @media (min-width: 1000px) {
      position: absolute;
    }
  }
}

.col-60-40 {
  display: grid;
  column-gap: 3rem;
  row-gap: 2rem;
  @media (min-width: 1000px) {
    grid-template-columns: 6fr 4fr;
  }
}

.lineAfter {
  width: 100%;
  display: flex;
  gap: 1rem;
  align-content: center;
  .line {
    flex-grow: 1;
    background-color: #e5e5e5;
    height: 2px;
    margin-block: auto;
  }
}

.halfWidthDesktop {
  @media (min-width: 1000px) {
    max-width: 50%;
  }
}

.card-400-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(calc(350rem / 16), 1fr));
  gap: 2rem;
  @media (max-width: calc((350rem / 16) + constants.$paddingInline)) {
    grid-template-columns: 1fr;
  }
}

.bgDark {
  background-color: var(--colorSectionDark);
  padding-block: calc(var(--sectionGap) / 2);
}

.sectionTitle {
  font-size: clamp(calc(32rem / 16), 3.5vw, calc(48rem / 16));
  line-height: 1.2;
}
.txtLight {
  color: var(--colorLight);
}
.txtLightGrey {
  color: var(--colorLightGrey);
}

.stickyDonateBtn {
  position: fixed;
  z-index: 2;
  background-color: #125b7a;
  inset-inline-end: 0;
  inset-block: 0;
  margin-block: auto;
  rotate: 270deg;
  -webkit-transform-origin: 51% 51%;
  transform: translateY(140%) translateZ(0);
  border: none;
  height: min-content;
  width: fit-content;
  padding-inline: 1rem;
  padding-block: 0.5rem;
  border-top-right-radius: 0.25rem;
  border-top-left-radius: 0.25rem;
  color: white;
  font-size: 1rem;
  letter-spacing: 1px;
  cursor: pointer;
  display: flex;
  gap: 0.5rem;
  transition: transform 300ms ease-in;
  &:hover {
    transform: translateY(130%);
  }
}

.logoLink {
  display: grid;
  height: 50px;
  overflow: hidden;
  place-content: center;
  place-items: center;
}
